@using Microsoft.Teams.Samples.TaskModule.Web.Helper;

<div class="font-semibold font-title">Microsoft Teams Task Modules Demo - Testing YMAL</div>
<p>
    A task module allows Teams app developers to create one or more custom, modal experiences with custom code for their users, particularly useful for initiating and/or completing tasks using a GUI that does not litter a Teams conversation with superfluous,
    intermediate task completion information.
</p>
<p>
    Let's try it out!
    <div style="text-align: center; margin-left: auto; margin-right: auto;">
        <button class="button-primary" onclick="submit('youtube');">YouTube</button>
        <button class="button-primary" onclick="submit('powerapp');">PowerApp</button>
        <p></p>
        <button class="button-primary" onclick="submit('customform');">Custom Form (results &rarr; tab)</button>
        <p></p>
        <button class="button-primary" onclick="submit('customform bot');">Custom Form (results &rarr; bot)</button>
        <p></p>
        <button class="button-primary" onclick="submit('adaptivecard');">Adaptive Card (results &rarr; tab)</button>
        <p></p>
        <button class="button-primary" onclick="submit('adaptivecard bot');">Adaptive Card (results &rarr; bot)</button>
        <p></p>
        <p></p>
        <a target="_blank" href="@(DeeplinkHelper.DeepLink)">Deep link to Custom Form page</a>
    </div>
<p></p>
<script src="~/Scripts/teamsapp.js"></script>
<script>
    microsoftTeams.app.initialize();

    submitHandler = (err, result) => {
            console.log(`Submit handler - err: ${err}`);
            alert("Result = " + JSON.stringify(result) + "\nError = " + JSON.stringify(err));
    };

    dialogResponse = (dialogResponse) => {
        console.log(`Submit handler - err: ${dialogResponse.err}`);
        alert("Result = " + JSON.stringify(dialogResponse.result) + "\nError = " + JSON.stringify(dialogResponse.err));
    };

        function submit(type) {
            let taskCardInfo = {
                title: null,
                height: null,
                width: null,
                url: null,
                card: null,
                fallbackUrl: null,
                completionBotId: null,
            };

            let taskInfo = {
                title: null,
                size: {
                    height: null,
                    width: null
                },
                url: null,
                fallbackUrl: null,
            };

            taskInfo.title = "Task Module Demo";
            taskInfo.size.height = "medium";
            taskInfo.size.width = "medium";

            if (type.includes('youtube')) {
                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/youtube";
                taskInfo.title = "@(TaskModuleUIConstants.YouTube.Title)";
                taskInfo.size.height = "@(TaskModuleUIConstants.YouTube.Height)";
                taskInfo.size.width = "@(TaskModuleUIConstants.YouTube.Width)";
                taskInfo.fallbackUrl = taskInfo.url;

                microsoftTeams.dialog.open(taskInfo, dialogResponse);
            }
            else if (type.includes('powerapp')) {
                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/powerapp";
                taskInfo.title = "@(TaskModuleUIConstants.PowerApp.Title)";
                taskInfo.size.height = "@(TaskModuleUIConstants.PowerApp.Height)";
                taskInfo.size.width = "@(TaskModuleUIConstants.PowerApp.Width)";
                taskInfo.fallbackUrl = taskInfo.url;

                microsoftTeams.dialog.open(taskInfo, dialogResponse);
            }
            else if (type.includes('customform')) {
                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/customform";
                taskInfo.title = "@(TaskModuleUIConstants.CustomForm.Title)";
                taskInfo.size.height = "@(TaskModuleUIConstants.CustomForm.Height)";
                taskInfo.size.width = "@(TaskModuleUIConstants.CustomForm.Width)";
                taskInfo.fallbackUrl = taskInfo.url;

                microsoftTeams.dialog.open(taskInfo, dialogResponse);
            }
            else {
                taskCardInfo.card =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(AdaptiveCardHelper.GetAdaptiveCard()));
                taskCardInfo.title = "@(TaskModuleUIConstants.AdaptiveCard.Title)";
                taskCardInfo.height = "@(TaskModuleUIConstants.AdaptiveCard.Height)";
                taskCardInfo.width = "@(TaskModuleUIConstants.AdaptiveCard.Width)";
                taskCardInfo.fallbackUrl = taskCardInfo.url;

                microsoftTeams.tasks.startTask(taskCardInfo, submitHandler);
            }
        }
</script>
