<!DOCTYPE html>
<html lang="en">

<head>

    <head>
        <script src="https://statics.teams.cdn.office.net/sdk/v1.6.0/js/MicrosoftTeams.min.js"
            integrity="sha384-mhp2E+BLMiZLe7rDIzj19WjgXJeI32NkPvrvvZBrMi5IvWup/1NUfS5xuYN5S3VT"
            crossorigin="anonymous"></script>
        <script src="https://statics.teams.microsoft.com/sdk/v1.7.0/js/MicrosoftTeams.min.js"></script>
        <script src="https://unpkg.com/@microsoft/teams-js/dist/MicrosoftTeams.min.js" crossorigin="anonymous"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
        <meta charset="UTF-8">
        <meta http-equiv="Content-Security-Policy"
            content="default-src *; style-src 'self' 'unsafe-inline' http://localhost:3978; script-src 'self' 'unsafe-inline' 'unsafe-eval'">
    </head>
</head>

<body id=mainDiv>
    <button onclick="requestConsent()" id="consent" style="display: none">Login</button>
    <div id="divGraphProfile" style="display: none"></div>
    <h4 id="successMsg"></h4>
    <div>

        <div class="radioClass">
            <label><input type="radio" name="notificationRadio" value="sendNotificationChannel"> Send Notification To
                User in Channel</label></br>
            <label><input type="radio" name="notificationRadio" value="customTopicNotificationChannel"> Send
                Notification with Custom Topic in Channel</label></br>
            <label><input type="radio" name="notificationRadio" value="notificationChannelTab"> Notify User about a
                channel Tab</label>
        </div></br>
        <div class="sendNotificationChannel desc">
            <div class="mb">
                <div class="tk-no" id="taskNumber"></div>
                <input type="text" class="tk-no" id="taskNumber" value="" disabled>
                <div class="input-grp">
                    <input type="text" class="alias" id="taskAssignedTo" required />
                </div>
                <div class="form-group fg">
                    <label for="title" class="title">Task Title</label>
                    <input type="text" id="taskTitle" name="taskTitle">
                </div>
                <div class="form-group fg">
                    <label for="title-desc" class="description">Task Description</label>
                    <input type="text" id="taskDescription" name="taskDescription">
                </div>
            </div>
            <div class="modal-footer mf">
                <button type="button" class="btn-send save" onclick="return SendNotificationToChannel()">Send
                    Notification to Channel</button>
            </div>
        </div>
        <div class="customTopicNotificationChannel desc">
            <div class="mb">
                <div class="tk-no" id="taskNumber"></div>
                <input type="text" class="tk-no" id="deploymentId" value="" disabled>
                <div class="input-grp">
                    <input type="text" class="alias" id="taskAssignedTo" required />
                </div>
                <div class="form-group fg">
                    <label for="DeployementTitle" class="DeployementTitle">Deployment Title</label>
                    <input type="text" id="DeployementTitle" name="DeployementTitle">

                </div>
                <div class="form-group fg">
                    <label for="deployment-desc" class="DeploymentDescription">Deployment Description</label>
                    <input type="text" id="DeploymentDescription" name="DeploymentDescription">
                </div>
            </div>
            <div class="modal-footer mf">
                <button type="button" class="btn-send save" onclick="return customTopicTeamNotification()">Notify with
                    Custom Topic in Channel</button>
            </div>
        </div>
        <div class="notificationChannelTab desc">
            <div class="mb">
                <input type="text" class="tk-no" id="deploymentId" value="" disabled>
                <div class="input-grp">
                </div>
                <div class="form-group fg">
                    <label for="reservationId" class="reservationId">ID</label>
                    <input type="text" id="reservationId" name="reservationId">
                </div>
                <div class="form-group fg">
                    <label for="reservationTitle" class="reservationTitle">Reservation Title</label>
                    <input type="text" id="reservationTitle" name="reservationTitle">
                </div>
                <div class="form-group fg">
                    <label for="currentSlot-desc" class="currentSlot">Current Slot</label>
                    <input type="text" id="currentSlot" name="currentSlot">
                </div>
            </div>
            <div class="modal-footer mf">
                <button type="button" class="btn-send save" onclick="return channelTabTeamNotification()">Notify User
                    for channel Tab</button>
            </div>
        </div>
    </div>


    <script>
        var token =  <%-token%>
            $(document).ready(function () {
                debugger;
                $(".customTopicNotificationChannel").hide();
                $(".notificationChannelTab").hide();
                $('input[type="radio"]').click(function () {
                    debugger;
                    var inputValue = $(this).attr("value");
                    var targetBox = $("." + inputValue);
                    $(".desc").not(targetBox).hide();
                    $(targetBox).show();
                });
            });
        microsoftTeams.initialize();
        var encodedWebUrl = encodeURI('https://6687952db3e0.ngrok.io/123/456&label=Task 456');
        var encodedContext = encodeURI('{"subEntityId": "task456"}');
        var taskItemUrl = 'https://teams.microsoft.com/l/entity/bb56234b-a5f2-4d26-acff-edecce8bf42f/tasklist123?webUrl=' + encodedWebUrl + '&context=' + encodedContext;
        var empty = true;
        $('input[type="text"]').each(function () {
            if ($(this).val() != "") {
                empty = false;
                return false;
            }
        });

        function SendNotificationToChannel() {
            debugger;
            var isValid = true;
            $('#taskTitle,#taskDescription').each(function (e) {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });
            if (isValid == false) {
                e.preventDefault();
                return false;
            }
            var action = "EntityTopic";
            let taskInfo = {
                title: $('#taskTitle').val(),
                description: $('#taskDescription').val(),
                taskInfoAction: action,
            };

            microsoftTeams.getContext(function (context) {
                console.log(context);
                var groupchatId = context.chatId;
                var username = context.upn;
                var userId = context.userObjectId;
                var teamId = context.groupId;

                const chat = {
                    "topic": {
                        "source": "entityUrl",
                        "value": "https://graph.microsoft.com/v1.0/teams/" + teamId
                    },
                    "activityType": "pendingFinanceApprovalRequests",
                    "previewText": {
                        "content": "Internal spending team has a pending finance approval requests"
                    },
                    "recipient": {
                        "@odata.type": "microsoft.graph.aadUserNotificationRecipient",
                        "userId": userId
                    },
                    "templateParameters": [
                        {
                            "name": "pendingRequestCount",
                            "value": "5"
                        }
                    ]
                };
                $.ajax({
                    url: "https://graph.microsoft.com/v1.0/teams/" + teamId + "/sendActivityNotification",
                    type: "POST",
                    data: JSON.stringify(chat),
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json',
                    },
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    success: function (profile) {
                        console.log(profile + "hahahaha");
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        debugger;
                        console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    },
                });
                microsoftTeams.tasks.submitTask(taskInfo);
                return true;
            });
        };

        function getChaannelMessage() {
            microsoftTeams.getContext(function (context) {
                console.log(token);
                var groupchatId = context.chatId;
                var userId = context.userObjectId;
                var teamId = context.groupId;
                var channelId = context.channelId;
                const message = {
                    "body": {
                        "content": "New Deployment: channnel "
                    }
                };
                $.ajax({
                    url: "https://graph.microsoft.com/v1.0/teams/" + teamId + "/channels/" + channelId + "/messages",
                    type: "POST",
                    data: JSON.stringify(message),
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json',
                    },
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    success: function (response) {
                        console.log(response);
                        return response;
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        debugger;
                        console.log(xhr);
                        console.log("textStatus: " + textStatus + ", errorThrown: chat" + errorThrown);
                    },
                });
            });
        }
        function channelTabTeamNotification() {
            debugger;
            var isValid = true;
            $('#reservationId,#reservationTitle,#currentSlot').each(function (e) {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });
            if (isValid == false) {
                e.preventDefault();
                return false;
            }
            var action = "CustomTopic";
            let taskInfo = {
                id: $('#reservationId').val(),
                title: $('#reservationTitle').val(),
                currentSlot: $('#currentSlot').val(),
                taskInfoAction: action,
            };

            microsoftTeams.getContext(function (context) {
                var groupchatId = context.chatId;
                var username = context.upn;
                var userId = context.userObjectId;
                var teamId = context.groupId;
                var channelId = context.channelId;
                var taburl;

                $.ajax({
                    url: "https://graph.microsoft.com/v1.0/teams/" + teamId + "/channels/" + channelId + "/tabs?$expand=teamsApp",
                    type: "GET",
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    success: function (profile) {
                        console.log(profile);
                        taburl = getTabURL(profile);
                        notificationToChannelTab(taburl,token,teamId,taskInfo,userId);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr);
                        console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    },
                });
            });

        }

        function notificationToChannelTab(taburl,token,teamId,taskInfo,userId){
            const chat = {
                    "topic": {
                        "source": "text",
                        "value": "Deployment Approvals Channel",
                        "webUrl": taburl
                    },
                    "activityType": "reservationUpdated",
                    "previewText": {
                        "content": "You have moved up the queue"
                    },
                    "recipient": {
                        "@odata.type": "microsoft.graph.aadUserNotificationRecipient",
                        "userId": userId
                    },
                    "templateParameters": [
                        {
                            "name": "reservationId",
                            "value": taskInfo.id
                        },
                        {
                            "name": "currentSlot",
                            "value": taskInfo.currentSlot
                        }
                    ]
                };

                $.ajax({
                    url: "https://graph.microsoft.com/v1.0/teams/" + teamId + "/sendActivityNotification",
                    type: "POST",
                    data: JSON.stringify(chat),
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json',
                    },
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    success: function (profile) {
                        console.log(profile);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        debugger;
                        console.log(xhr);
                        console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    },
                });
        }
        function getTabURL(appList) {
            debugger;
            list = appList.value;
            var i = 0;
            for (i = 0; i < list.length; i++) {
                if (list[i].teamsApp['displayName'] == "NotifyFeedApp") {
                    return list[i].webUrl;
                }
            }
        }

        function customTopicTeamNotification() {
            debugger;
            var isValid = true;
            $('#DeployementTitle,#DeployementDescription').each(function (e) {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });
            if (isValid == false) {
                e.preventDefault();
                return false;
            }
            var action = "EntityTopic";
            let taskInfo = {
                title: $('#DeployementTitle').val(),
                description: $('#DeployementDescription').val(),
                taskInfoAction: action,
            };

            microsoftTeams.getContext(function (context) {
                var groupchatId = context.chatId;
                var username = context.upn;
                var userId = context.userObjectId;
                var teamId = context.groupId;

                const chat = {
                    "topic": {
                        "source": "text",
                        "value": "Deployment Approvals Channel",
                        "webUrl": "https://teams.microsoft.com/l/message/19%3Ab47d597d4bdc4b988f93893577269b8e%40thread.tacv2/1627308680622?groupId=45caea2f-a557-41ec-b483-034ebbe8f582&tenantId=295e356b-4c71-45d8-98bf-c0865ef4a4e8&createdTime=1627308680622&parentMessageId=1627308680622"
                    },
                    "activityType": "deploymentApprovalRequired",
                    "previewText": {
                        "content": "New deployment requires your approval"
                    },
                    "recipient": {
                        "@odata.type": "microsoft.graph.aadUserNotificationRecipient",
                        "userId": userId
                    },
                    "templateParameters": [
                        {
                            "name": "deploymentId",
                            "value": taskInfo.title
                        }
                    ]
                };
                $.ajax({
                    url: "https://graph.microsoft.com/v1.0/teams/" + teamId + "/sendActivityNotification",
                    type: "POST",
                    data: JSON.stringify(chat),
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json',
                    },
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    success: function (profile) {
                        console.log(profile);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        debugger;
                        console.log(xhr);
                        console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    },
                });
                microsoftTeams.tasks.submitTask(taskInfo);
                return true;
            });
        };
    </script>
</body>

</html>